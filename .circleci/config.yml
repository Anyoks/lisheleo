# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build-job:
      docker:
        # specify the version you desire here
         - image: circleci/ruby:2.5-stretch-node-browsers-legacy
           environment:
            PGHOST: 127.0.0.1
            PGUSER: lisheleo-test
            RAILS_ENV: test
        
        # Specify service dependencies here if necessary
        # CircleCI maintains a library of pre-built images
        # documented at https://circleci.com/docs/2.0/circleci-images/
         - image: circleci/postgres:10.5-alpine-postgis
           environment: # environment variables for database
            POSTGRES_USER: postgres
            POSTGRES_DB: lisheleo_app_test
            POSTGRES_PASSWORD: "postgres"

      working_directory: ~/lisheleo

      steps:
        - checkout

        # Download and cache dependencies
        - restore_cache:
            keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

        - run:
            name: install dependencies
            command: |
              bundle install --jobs=4 --retry=3 --path vendor/bundle

        - save_cache:
            paths:
              - ./vendor/bundle
            key: v1-dependencies-{{ checksum "Gemfile.lock" }}
          
        # Database setup
        - run: bundle exec rake db:create
        - run: bundle exec rake db:schema:load

        # run tests!
        - run:
            name: run tests
            command: |
              mkdir /tmp/test-results
              TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
              
              bundle exec rspec --format progress \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format progress \
                              $TEST_FILES

        # collect reports
        - store_test_results:
            path: /tmp/test-results
        - store_artifacts:
            path: /tmp/test-results
            destination: test-results


  deploy-job:
      docker:
        - image: circleci/ruby:2.5-stretch-node-browsers-legacy
      working_directory: ~/lisheleo
      steps:
        - checkout
        - add_ssh_keys:
              fingerprints:
                - "15:21:d2:b2:41:bb:98:2f:e6:a9:af:30:48:bd:00:47"
        - run: ssh-keyscan 165.227.160.87 >> ~/.ssh/known_hosts
        # - run:
        #     name: Sshing into Do droplet
        #     command:  ls ~/.ssh #yes yes | ssh deploy@165.227.160.87
        - run:
            name: Bundle Install
            command: bundle check || bundle install
        - run:
            name: Deploy to Digital Ocean if tests pass and branch is Master
            command: bundle exec cap production deploy

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job
      - deploy-job:
          requires:
            - build-job
          filters:
            branches:
              only: master